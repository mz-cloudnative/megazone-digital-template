buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.megazone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.2.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-jpa'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.mockito:mockito-core:4.11.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.4'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	// QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
	annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'

	//P6Spy 쿼리 조회시 ? 값 바인딩
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

	//object 간 변환 처리
	implementation 'org.modelmapper:modelmapper:3.1.1'

	//TestContainers 관련(단위테스트)
	testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
	testImplementation("org.testcontainers:junit-jupiter:1.17.6")
}

// QueryDSL 추가
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDir querydslDir
}

tasks.named('test') {
	useJUnitPlatform()
}


//querydsl 사용 경로
def querydslDir = "$buildDir/generated/querydsl"

//querydsl 사용 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet
sourceSets {
	main.java.srcDir querydslDir
}

// compileClasspath와 annotationProcessor 상속
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

//feature/improve-all
// querydsl 컴파일 시 사용할 옵션.
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

//feature/improve-all
// QType 정리
clean {
	delete file(querydslDir)
}
