buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.osdetector' version '1.7.3'
}

group = 'com.megazone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'
    // QueryDsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    //implementation 'org.modelmapper:modelmapper:3.1.1'
    //TODO: 설정하게되면 Datasource 이중화 작동이 되지 않으므로 해당 설정은 반드시 개발환경에서만 적용하도록 한다.
    //P6Spy 쿼리 조회시 ? 값 바인딩
    //implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // mac silicon only
    // https://github.com/apache/commons-lang/blob/master/src/main/java/org/apache/commons/lang3/SystemUtils.java#L1173
    if (osdetector.classifier == "osx-aarch_64") {
        runtimeOnly "io.netty:netty-resolver-dns-native-macos:4.1.89.Final:${osdetector.classifier}"
    }
    implementation "org.mapstruct:mapstruct:1.3.1.Final"
    compileOnly "org.projectlombok:lombok"
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // 이제 순서 상관없음
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.projectreactor:reactor-test:3.3.22.RELEASE'

    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'


    //TestContainers 관련(단위테스트)
    testImplementation("org.testcontainers:junit-jupiter:1.17.6")
    testImplementation("org.testcontainers:postgresql:1.17.6")
    testImplementation("org.testcontainers:kafka:1.17.6")
}

// QueryDSL 추가
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDir querydslDir
}

tasks.named('test') {
    useJUnitPlatform()
}
